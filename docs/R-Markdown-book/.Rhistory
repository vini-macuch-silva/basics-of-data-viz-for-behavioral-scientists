str(numbers)
numbers <- as.factor(numbers)
df1
df1 <- data.frame(numbers, letters, stringsAsFactors = FALSE)
numbers <- c(2, 3, 5, 9)
numbers
numbers <- as.factor(numbers)
str(numbers)
letters <- c("a", "f", "m", "t")
str(letters)
df1 <- data.frame(numbers, letters)
str(df1)
df1
order <- c(1, 2, 3, 4)
df1 <- data.frame(df1, order)
df1
order <- c(1, 2, 3)
df1 <- data.frame(numbers, letters, stringsAsFactors = FALSE)
order <- c(1, 2, 3)
df1 <- data.frame(df1, order)
order_numb <- c(TRUE, TRUE, TRUE, TRUE)
df1 <- data.frame(df1, order_numb)
df1
df1
order_let <- c(TRUE, TRUE, TRUE, TRUE)
df1$order_let <- order_let
df1
df1
library(tidyverse)
pivot_longer(df1, order_numb, order_let, names_to = "order", values_to "correct")
library(tidyverse)
pivot_longer(df1, -order_numb, -order_let, names_to = "order", values_to "correct")
df1
library(tidyverse)
pivot_longer(df1, -order_numb, -order_let, names_to = "order", values_to = "correct")
pivot_longer(df1, cols = starts_with("order"), names_to = "order", values_to = "correct")
df1_long <- pivot_longer(df1, cols = starts_with("order"), names_to = "order", values_to = "correct")
df1_long
install.packages("tidyverse")
2 + 2
op1 <- 2 + 2
op1
op1 + 2
op2 <- op1 + 2
op2
numbers <- c(2, 3, 5, 9)
numbers
str(numbers)
numbers <- as.factor(numbers)
str(numbers)
letters <- c("a", "f", "m", "t")
str(letters)
df1 <- data.frame(numbers, letters)
str(df1)
df1 <- data.frame(numbers, letters, stringsAsFactors = FALSE)
str(df1)
df1
order_numb <- c(TRUE, TRUE, TRUE, TRUE)
df1 <- data.frame(df1, order_numb)
order_let <- c(TRUE, TRUE, TRUE, TRUE)
df1$order_let <- order_let
df1
library(tidyverse)
df1_long <- pivot_longer(df1, cols = starts_with("order"), names_to = "order", values_to = "correct")
df1_long
df1_long <- df1 %>%
pivot_longer(cols = starts_with("order"), names_to = "order", values_to = "correct")
df1_long
View(df1_long)
df1_long[, 1]
bookdown::render_book()
render_book()
(2 | 3) + 1 > 4
(2 & 3) + 1 > 4
(2 | 3) + 1 > 3
(2 & 3) + 1 > 3
(2 | 3) + 1 > 3
(2 & 3) + 1 > 3
x <- 2
y <- 3
(x | y) + 1 > 3
(x & y) + 1 > 3
2 + 1 > 3 | 3 + 1 > 3
2 + 1 > 3 & 3 + 1 > 3
2 > 3 | 3 > 3
2 > 3 & 3 > 3
2 >= 3 | 3 >= 3
2 >= 3 & 3 >= 3
help(select)
help(c)
help("read.csv")
help(read_csv)
setwd("~/MEGA/Documents/PhD/Teaching/Basics-of-data-visualization-for-behavioral-scientists/data-sets/Michl(2019)")
library(tidyverse)
# load data
exp1 <- read_csv("all-250-6000ALL.csv")
# convert variable to factor
exp1$cond <- as.factor(exp1$cond)
# recode variable
exp1$cond <- fct_recode(exp1$cond, metonymic = "1", metaphoric = "2", metaphoric = "3", literal = "4", control = "5")
exp1 %>%
ggplot(aes(cond, rat)) +
geom_boxplot()
setwd("~/MEGA/Documents/PhD/Teaching/Basics-of-data-visualization-for-behavioral-scientists/data-sets/Michl(2019)")
exp1 %>%
ggplot(aes(cond, rat, color = cond)) +
geom_boxplot() +
coord_flip() +
scale_color_brewer(palette = "Set2")
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot() +
coord_flip()
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot() +
coord_flip() +
scale_fill_brewer(palette = "Set2")
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .8) +
coord_flip() +
scale_fill_brewer(palette = "Set2")
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7) +
coord_flip() +
scale_fill_brewer(palette = "Set2")
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7, weight = 1) +
coord_flip() +
scale_fill_brewer(palette = "Set2")
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7, weight = 1.5) +
coord_flip() +
scale_fill_brewer(palette = "Set2")
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7, weight = 2) +
coord_flip() +
scale_fill_brewer(palette = "Set2")
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7, weight = 20) +
coord_flip() +
scale_fill_brewer(palette = "Set2")
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7, color = "black", weight = 20) +
coord_flip() +
scale_fill_brewer(palette = "Set2")
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7, color = "black", weight = 50) +
coord_flip() +
scale_fill_brewer(palette = "Set2")
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7, color = "black") +
coord_flip() +
scale_fill_brewer(palette = "Set2")
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7) +
coord_flip() +
scale_fill_brewer(palette = "Set2")
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7) +
coord_flip() +
scale_fill_brewer(palette = "Set2")
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7) +
coord_flip() +
scale_fill_brewer(palette = "Set2") +
theme_minimal()
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7) +
coord_flip() +
scale_fill_brewer(palette = "Set2") +
theme_minimal()
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7, lwd = 3) +
coord_flip() +
scale_fill_brewer(palette = "Set2") +
theme_minimal()
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7, lwd = 2) +
coord_flip() +
scale_fill_brewer(palette = "Set2") +
theme_minimal()
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7, lwd = 1.5) +
coord_flip() +
scale_fill_brewer(palette = "Set2") +
theme_minimal()
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7, lwd = 1.2) +
coord_flip() +
scale_fill_brewer(palette = "Set2") +
theme_minimal()
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7, lwd = 1.2) +
coord_flip() +
scale_fill_brewer(palette = "Set2") +
theme_minimal() +
theme(axis.title.x = element_blank(), axis.title.y = element_blank())
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7, lwd = 1.2) +
coord_flip() +
scale_fill_brewer(palette = "Set2") +
theme_minimal() +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(),
panel.grid.major.x = element_blank())
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7, lwd = 1.2) +
coord_flip() +
scale_fill_brewer(palette = "Set2") +
theme_minimal() +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(),
panel.grid.major.y = element_blank())
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7, lwd = 1.2) +
coord_flip() +
scale_fill_brewer(palette = "Set2") +
theme_minimal() +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(),
panel.grid.major.y = element_blank()) +
scale_y_discrete(limits = c(1:7))
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7, lwd = 1.2) +
coord_flip() +
scale_fill_brewer(palette = "Set2") +
theme_minimal() +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(),
panel.grid.major.y = element_blank(), panel.grid.minor.y = element_line()) +
scale_y_discrete(limits = c(1:7))
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7, lwd = 1.2) +
coord_flip() +
scale_fill_brewer(palette = "Set2") +
theme_minimal() +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(),
panel.grid.major.y = element_blank(), panel.grid.minor.x = element_line()) +
scale_y_discrete(limits = c(1:7))
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7, lwd = 1.2) +
coord_flip() +
scale_fill_brewer(palette = "Set2") +
theme_minimal() +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(),
panel.grid.major.y = element_blank(), panel.grid.minor.y = element_line()) +
scale_y_discrete(limits = c(1:7))
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7, lwd = 1.2) +
coord_flip() +
scale_fill_brewer(palette = "Set2") +
theme_minimal() +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(),
panel.grid.major.y = element_blank(),
axis.title.y = element_text(face = "bold", size = 14)) +
scale_y_discrete(limits = c(1:7))
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7, lwd = 1.2) +
coord_flip() +
scale_fill_brewer(palette = "Set2") +
theme_minimal() +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(),
panel.grid.major.y = element_blank(),
axis.text.y = element_text(face = "bold", size = 14)) +
scale_y_discrete(limits = c(1:7))
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7, lwd = 1.2) +
coord_flip() +
scale_fill_brewer(palette = "Set2") +
theme_minimal() +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(),
panel.grid.major.y = element_blank(),
axis.text.y = element_text(face = "bold", size = 14), axis.text.x = element_text(face = "bold", size = 14)) +
scale_y_discrete(limits = c(1:7))
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7, lwd = 1.2) +
coord_flip() +
scale_fill_brewer(palette = "Set2") +
theme_minimal() +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(),
panel.grid.major.y = element_blank(),
axis.text.y = element_text(face = "bold", size = 14, margin = margin(t = 0, r = 15, b = 0, l = 0)), axis.text.x = element_text(face = "bold", size = 14, margin = margin(t = 15, r = 0, b = 0, l = 0))) +
scale_y_discrete(limits = c(1:7))
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7, lwd = 1.2) +
coord_flip() +
scale_fill_brewer(palette = "Set2") +
theme_minimal() +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(),
panel.grid.major.y = element_blank(),
axis.text.y = element_text(face = "bold", size = 14, margin = margin(t = 0, r = 10, b = 0, l = 0)), axis.text.x = element_text(face = "bold", size = 14, margin = margin(t = 10, r = 0, b = 0, l = 0))) +
scale_y_discrete(limits = c(1:7))
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7, lwd = 1.2) +
coord_flip() +
scale_fill_brewer(palette = "Set2") +
theme_minimal() +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(),
panel.grid.major.y = element_blank(),
axis.text.y = element_text(face = "bold", size = 14, margin = margin(t = 0, r = 10, b = 0, l = 0)), axis.text.x = element_text(face = "bold", size = 14, margin = margin(t = 10, r = 0, b = 0, l = 0))) +
scale_y_discrete(limits = c(1:7)) +
scale_x_discrete(labels = c("control" = "Control", "literal" = "Literal",
"metonymic" = "Metonymic", "metaphoric" = "Metaphoric"))
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7, lwd = 1.2) +
coord_flip() +
scale_fill_brewer(palette = "Set2") +
theme_minimal() +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(),
panel.grid.major.y = element_blank(), legend.position = "none")
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7, lwd = 1.2) +
coord_flip() +
scale_fill_brewer(palette = "Set2") +
theme_minimal() +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(),
panel.grid.major.y = element_blank(), legend.position = "none",
axis.text.y = element_text(face = "bold", size = 14, margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.text.x = element_text(face = "bold", size = 14, margin = margin(t = 10, r = 0, b = 0, l = 0)),
plot.title = element_text(face = "bold", size = 20, margin = margin(t = 10, r = 0, b = 15, l = 0))) +
scale_y_discrete(limits = c(1:7)) +
scale_x_discrete(labels = c("control" = "Control", "literal" = "Literal",
"metonymic" = "Metonymic", "metaphoric" = "Metaphoric"))
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7, lwd = 1.2) +
coord_flip() +
scale_fill_brewer(palette = "Set2") +
theme_minimal() +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(),
panel.grid.major.y = element_blank(), legend.position = "none",
axis.text.y = element_text(face = "bold", size = 14, margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.text.x = element_text(face = "bold", size = 14, margin = margin(t = 10, r = 0, b = 0, l = 0)),
plot.title = element_text(face = "bold", size = 20, margin = margin(t = 10, r = 0, b = 15, l = 0))) +
scale_y_discrete(limits = c(1:7)) +
scale_x_discrete(labels = c("control" = "Control", "literal" = "Literal",
"metonymic" = "Metonymic", "metaphoric" = "Metaphoric")) +
ggtitle("Sentence ratings")
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7, lwd = 1.2) +
coord_flip() +
scale_fill_brewer(palette = "Set2") +
theme_minimal() +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(),
panel.grid.major.y = element_blank(), legend.position = "none",
axis.text.y = element_text(face = "bold", size = 14, margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.text.x = element_text(face = "bold", size = 14, margin = margin(t = 10, r = 0, b = 0, l = 0)),
plot.title = element_text(face = "bold", size = 24, vjust = .5, margin = margin(t = 10, r = 0, b = 20, l = 0))) +
scale_y_discrete(limits = c(1:7)) +
scale_x_discrete(labels = c("control" = "Control", "literal" = "Literal",
"metonymic" = "Metonymic", "metaphoric" = "Metaphoric")) +
ggtitle("Sentence ratings")
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7, lwd = 1.2) +
coord_flip() +
scale_fill_brewer(palette = "Set2") +
theme_minimal() +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(),
panel.grid.major.y = element_blank(), legend.position = "none",
axis.text.y = element_text(face = "bold", size = 14, margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.text.x = element_text(face = "bold", size = 14, margin = margin(t = 10, r = 0, b = 0, l = 0)),
plot.title = element_text(face = "bold", size = 24, hjust = .5, margin = margin(t = 10, r = 0, b = 25, l = 0))) +
scale_y_discrete(limits = c(1:7)) +
scale_x_discrete(labels = c("control" = "Control", "literal" = "Literal",
"metonymic" = "Metonymic", "metaphoric" = "Metaphoric")) +
ggtitle("Sentence ratings")
create a sharper contrast between the different boxplots
library(gganimate)
install.packages("gganimate")
library(gganimate)
exp1 %>%
ggplot(aes(cond, rat)) +
geom_boxplot()
exp1 %>%
ggplot(aes(cond, rat)) +
geom_boxplot()
library(tidyverse)
# load data
exp1 <- read_csv("C:/Users/vinim/Documents/MEGA/Documents/PhD/Teaching/Basics-of-data-visualization-for-behavioral-scientists/data-sets/Michl(2019)/all-250-6000ALL.csv")
# convert variable to factor
exp1$cond <- as.factor(exp1$cond)
# recode variable
exp1$cond <- fct_recode(exp1$cond, metonymic = "1", metaphoric = "2", metaphoric = "3", literal = "4", control = "5")
exp1 %>%
ggplot(aes(cond, rat)) +
geom_boxplot()
exp1 %>%
ggplot(aes(cond, rat)) +
geom_boxplot() +
coord_flip()
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot() +
coord_flip()
exp1 %>%
ggplot(aes(cond, rat, fill = cond)) +
geom_boxplot(alpha = .7, lwd = 1.2) +
coord_flip() +
scale_fill_brewer(palette = "Set2") +
theme_minimal() +
theme(axis.title.x = element_blank(), axis.title.y = element_blank(),
panel.grid.major.y = element_blank(), legend.position = "none",
axis.text.y = element_text(face = "bold", size = 14, color = cond,
margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.text.x = element_text(face = "bold", size = 14, margin = margin(t = 10, r = 0, b = 0, l = 0)),
plot.title = element_text(face = "bold", size = 24, hjust = .5, margin = margin(t = 10, r = 0, b = 25, l = 0))) +
scale_y_discrete(limits = c(1:7)) +
scale_x_discrete(labels = c("control" = "Control", "literal" = "Literal",
"metonymic" = "Metonymic", "metaphoric" = "Metaphoric")) +
ggtitle("Sentence ratings")
blogdown::serve_site()
numbers <- c(2, 3, 5, 9)
numbers
numbers <- as.factor(numbers)
str(numbers)
letters <- c("a", "f", "m", "t")
str(letters)
df1 <- data.frame(numbers, letters)
str(df1)
df1 <- data.frame(numbers, letters, stringsAsFactors = FALSE)
str(df1)
df1
order_numb <- c(TRUE, TRUE, TRUE, TRUE)
df1 <- data.frame(df1, order_numb)
df1
order_let <- c(TRUE, TRUE, TRUE, TRUE)
df1$order_let <- order_let
df1
library(tidyverse)
df1_long <- pivot_longer(df1, cols = starts_with("order"), names_to = "order", values_to = "correct")
df1_long
df1_long <- df1 %>%
pivot_longer(cols = starts_with("order"), names_to = "order", values_to = "correct")
df1_long
df1_long$numbers <- as.numeric(df1_long$numbers)
df1_long %>%
filter(numbers > 2)
df1_long$numbers <- as.numeric(df1_long$numbers)
df1_lonng$numbers
df1_long$numbers
df1_long <- df1 %>%
pivot_longer(cols = starts_with("order"), names_to = "order", values_to = "correct")
df1_long
as.numeric(df1_long$numbers)
df1_long$numbers <- as.numeric(levels(df1_long$numbers))[df1_long$numbers]
str(df1_long$numbers)
df1_long <- df1 %>%
pivot_longer(cols = starts_with("order"), names_to = "order", values_to = "correct")
df1_long$numbers <- as.numeric(df1_long$numbers)
as.numeric(df1_long$numbers)
df1_long <- df1 %>%
pivot_longer(cols = starts_with("order"), names_to = "order", values_to = "correct")
as.numeric(levels(df1_long$numbers))
str(df1_long$numbers)
df1_long$numbers <- as.numeric(levels(df1_long$numbers))
df1_long %>%
filter(numbers > 2)
blogdown::serve_site()
